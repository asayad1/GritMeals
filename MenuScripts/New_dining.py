import requests
import json
import os
import smtplib
from datetime import date
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText


truegrit_pass = "BruhlmaoXD123!@"
truegrit_user = "gritmeals@outlook.com"

# customer_list = ["il27770@umbc.edu",
#                  "pranavv1@umbc.edu",
#                  "tlostos1@umbc.edu",
#                  "nnegi1@umbc.edu",
#                  "r148@umbc.edu",
#                  "zhoward1@umbc.edu"]
customer_list = ["gni@umd.edu"]

print(truegrit_user)
print(truegrit_pass)

with smtplib.SMTP("smtp.office365.com", 587) as stmp:
    stmp.ehlo()
    stmp.starttls()
    stmp.ehlo()

    stmp.login(truegrit_user, truegrit_pass)

    truegrits_location_id = '61f9d7c8a9f13a15d7c1a25e'

    date = str(date.today())
    url = 'https://api.dineoncampus.com/v1/location/61f9d7c8a9f13a15d7c1a25e/periods/?platform=0&date='+date
    init_response = requests.get(url)
    json_data = json.loads(init_response.text)

    tabular_fields = ["Meal Period", "Category", "Items"]
    tabular_table = PrettyTable()
    tabular_table.field_names = tabular_fields

    msg = MIMEMultipart('alternative')
    msg['Subject'] = "Today's Menu: " + date
    msg['From'] = truegrit_user
    msg['To'] = customer_list[0]
    text = "Hi!\nHow are you?\nHere is the link you wanted:\nhttp://www.python.org"
    # html = """\
    # <html>
    #   <head></head>
    #   <body>
    #     <p>Hi!<br>
    #        How are you?<br>
    #        Here is the <a href="http://www.python.org">link</a> you wanted.
    #     </p>
    #   </body>
    # </html>
    # """

    html = """\
    <!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
	background-image: linear-gradient(19deg, #21D4FD 0%, #B721FF 100%);
ccc; 
	background-repeat: no-repeat;
	font: 400 16px/1.5em "Open Sans", sans-serif;
}
.page-content {
	max-width: 700px; 
	margin: 32px auto; 
	padding: 32px; 
	background: #fff;
}
a {
	color: #21D4FD; 
	transition: all 0.3s;
}
a:hover {
	color: #B721FF;
}

.tabbed {
	overflow-x: hidden; /* so we could easily hide the radio inputs */
	margin: 32px 0;
	padding-bottom: 16px;
	border-bottom: 1px solid #ccc;
}

.tabbed [type="radio"] {
	/* hiding the inputs */
	display: none;
}

.tabs {
	display: flex;
	align-items: stretch;
	list-style: none;
	padding: 0;
	border-bottom: 1px solid #ccc;
}
.tab > label {
	display: block;
	margin-bottom: -1px;
	padding: 12px 15px;
	border: 1px solid #ccc;
	background: #eee;
	color: #666;
	font-size: 12px; 
	font-weight: 600;
	text-transform: uppercase;
	letter-spacing: 1px;
	cursor: pointer;	
	transition: all 0.3s;
}
.tab:hover label {
	border-top-color: #333;
	color: #333;
}

.tab-content {
	display: none;
	color: #777;
}

/* As we cannot replace the numbers with variables or calls to element properties, the number of this selector parts is our tab count limit */
.tabbed [type="radio"]:nth-of-type(1):checked ~ .tabs .tab:nth-of-type(1) label,
.tabbed [type="radio"]:nth-of-type(2):checked ~ .tabs .tab:nth-of-type(2) label,
.tabbed [type="radio"]:nth-of-type(3):checked ~ .tabs .tab:nth-of-type(3) label,
.tabbed [type="radio"]:nth-of-type(4):checked ~ .tabs .tab:nth-of-type(4) label,
.tabbed [type="radio"]:nth-of-type(5):checked ~ .tabs .tab:nth-of-type(5) label {
	border-bottom-color: #fff;
	border-top-color: #B721FF;
	background: #fff;
	color: #222;
}

.tabbed [type="radio"]:nth-of-type(1):checked ~ .tab-content:nth-of-type(1),
.tabbed [type="radio"]:nth-of-type(2):checked ~ .tab-content:nth-of-type(2),
.tabbed [type="radio"]:nth-of-type(3):checked ~ .tab-content:nth-of-type(3),
.tabbed [type="radio"]:nth-of-type(4):checked ~ .tab-content:nth-of-type(4) {
	display: block;
</style>
 
<div class="page-content">
	<p>This is my solution for css-only tabs. It's not perfect, but has some advantages, like some degree of flexibility - the CSS is id-agnostic, so the HTML can be generated by server-side scripts (for example in WordPress shortcodes).</p>
	<p>All you need to generate are the radio buttons' ids and names.</p>
	
	<div class="tabbed">
		<input type="radio" id="tab1" name="css-tabs" checked>
		<input type="radio" id="tab2" name="css-tabs">
		<input type="radio" id="tab3" name="css-tabs">
		
		<ul class="tabs">
			<li class="tab"><label for="tab1">Gangsta lipsum</label></li>
			<li class="tab"><label for="tab2">Zombie lipsum</label></li>
			<li class="tab"><label for="tab3">New age bullshit</label></li>
		</ul>
		
		<div class="tab-content">
			<h4>Gangsta lipsum</h4>
			<p>Da bomb ipsizzle dolizzle sit amizzle, consectetuer adipiscing fo shizzle. Nullam yo velizzle, aliquet volutpizzle, fo shizzle yippiyo, for sure vizzle, arcu. Black eget fo shizzle. Sizzle erizzle. Rizzle at dolizzle dapibizzle turpis tempizzle izzle. Maurizzle crackalackin nibh et check out this. Cool check it out tortizzle. Break it down bling bling rhoncizzle my shizz. Fo hizzle rizzle platea boom shackalack. Gangsta dapibus. Owned tellus urna, pretizzle black, mattizzle ac, eleifend for sure, nunc. Owned suscipizzle. Integizzle sempizzle shiz sed purizzle.</p>
		</div>
		
		<div class="tab-content">
			<h4>Zombie lipsum</h4>
			<p>Zombie ipsum brains reversus ab cerebellum viral inferno, brein nam rick mend grimes malum cerveau cerebro. De carne cerebro lumbering animata cervello corpora quaeritis. Summus thalamus brains sit​​, morbo basal ganglia vel maleficia? De braaaiiiins apocalypsi gorger omero prefrontal cortex undead survivor fornix dictum mauris. </p>
		</div>
		
		<div class="tab-content">
			<h4>New age bullshit</h4>
			<p>Our conversations with other pilgrims have led to an awakening of pseudo-astral consciousness. Who are we? Where on the great myth will we be re-energized? We are at a crossroads of complexity and stagnation.</p>
			<p>Eons from now, we dreamers will exist like never before as we are aligned by the cosmos. We are being called to explore the stratosphere itself as an interface between nature and complexity. We must learn how to lead infinite lives in the face of bondage.</p>
			<p>Generated by the <a href="http://sebpearce.com/bullshit/">New Age Bullshit Generator</a></p>
		</div>
	</div>
	<p>The tabs are quite easy to use as they don't need absolute positioning and min-heights.</p>
	<p>They can also be used multiple times in one document without any influence on CSS.</p>
	<div class="tabbed">
		<input type="radio" id="tab21" name="css-tabs2" checked>
		<input type="radio" id="tab22" name="css-tabs2">
		<input type="radio" id="tab23" name="css-tabs2">
		
		<ul class="tabs">
			<li class="tab"><label for="tab21">Gangsta lipsum</label></li>
			<li class="tab"><label for="tab22">Zombie lipsum</label></li>
			<li class="tab"><label for="tab23">New age bullshit</label></li>
		</ul>
		
		<div class="tab-content">
			<h4>Gangsta lipsum</h4>
			<p>Da bomb ipsizzle dolizzle sit amizzle, consectetuer adipiscing fo shizzle. Nullam yo velizzle, aliquet volutpizzle, fo shizzle yippiyo, for sure vizzle, arcu. Black eget fo shizzle. Sizzle erizzle. Rizzle at dolizzle dapibizzle turpis tempizzle izzle. Maurizzle crackalackin nibh et check out this. Cool check it out tortizzle. Break it down bling bling rhoncizzle my shizz. Fo hizzle rizzle platea boom shackalack. Gangsta dapibus. Owned tellus urna, pretizzle black, mattizzle ac, eleifend for sure, nunc. Owned suscipizzle. Integizzle sempizzle shiz sed purizzle.</p>
		</div>
		
		<div class="tab-content">
			<h4>Zombie lipsum</h4>
			<p>Zombie ipsum brains reversus ab cerebellum viral inferno, brein nam rick mend grimes malum cerveau cerebro. De carne cerebro lumbering animata cervello corpora quaeritis. Summus thalamus brains sit​​, morbo basal ganglia vel maleficia? De braaaiiiins apocalypsi gorger omero prefrontal cortex undead survivor fornix dictum mauris. </p>
		</div>
		
		<div class="tab-content">
			<h4>New age bullshit</h4>
			<p>Our conversations with other pilgrims have led to an awakening of pseudo-astral consciousness. Who are we? Where on the great myth will we be re-energized? We are at a crossroads of complexity and stagnation.</p>
			<p>Eons from now, we dreamers will exist like never before as we are aligned by the cosmos. We are being called to explore the stratosphere itself as an interface between nature and complexity. We must learn how to lead infinite lives in the face of bondage.</p>
			<p>Generated by the <a href="http://sebpearce.com/bullshit/">New Age Bullshit Generator</a></p>
		</div>
	</div>
	<p>Unfortunately, these tabs have one downside: limited tab count. The limit is set in the CSS (see comments in the CSS code). But let's get real: who uses lots of tabs?</p>
	<p>And one more thing: no animation to prevent annoying page jumps.</p>
	<p>Have an improvement idea? Feel free to suggest it in the comments!</p>
</div>
   
</body>
</html> 
    
    """
    alt = """<tbody>
                <tr>
                  <th>Meal Period</th>
                  <th>Category</th>
                  <th>Item</th>
                </tr>
                <tr>
                  <td>Ron</td>
                  <td>Wilson</td>
                  <td>30</td>
                </tr>
                <tr>
                  <td>Armando</td>
                  <td>Reyes</td>
                  <td>17</td>
                </tr>
                <tr>
                  <td>Sarah</td>
                  <td>Thompkins</td>
                  <td>62</td>
                </tr>
                <tr>
                  <td>Lorraine</td>
                  <td>Schugel</td>
                  <td>25</td>
                </tr>
              </tbody>"""

    # html = html.replace("REPLACE-HERE", alt)

    list_mealperiod = []
    list_category = []

    meal_periods_dict = {}

    body_msg = ""
    data_period = json_data['periods']
    for period in data_period:
        meal_periods_dict[period["name"]] = period["id"]

    for period in meal_periods_dict.keys():
        print("\n################################\n")
        body_msg += "\n################################\n\n"
        url = 'https://api.dineoncampus.com/v1/location/61f9d7c8a9f13a15d7c1a25e/periods/' + meal_periods_dict[
            period] + '?platform=0&date=' + date
        period_response = requests.get(url)
        json_data = json.loads(period_response.text)

        data = json_data['menu']['periods']

        print("Meal Period:", data['name'], '\n')
        body_msg += "Meal Period:" + data['name'] + '\n\n'

        for category in data['categories']:
            print(category['name'])
            body_msg += category["name"] + "\n"
            for item in category['items']:
                print("\t", item['name'])
                body_msg += "\t" + item["name"] + "\n"

                if data["name"] not in list_mealperiod and category["name"] not in list_category:
                    tabular_table.add_row(
                        [data["name"], category["name"].title(), item["name"]])
                    list_mealperiod.append(data["name"])
                    list_category.append(category["name"])
                elif data["name"] in list_mealperiod and category["name"] not in list_category:
                    tabular_table.add_row(
                        ["", category["name"].title(), item["name"]])
                    list_category.append(category["name"])
                elif data["name"] in list_mealperiod and category["name"] in list_category:
                    tabular_table.add_row(["", "", item["name"]])
        list_category = []

    alt = tabular_table.get_html_string().replace("table", "tbody")

    html = html.replace("REPLACE-HERE", alt)

    part1 = MIMEText(text, 'plain')
    part2 = MIMEText(html, 'html')
    # subject = "Today's Menu: " + date

    # msg = f"Subject: {subject} \n\n {body_msg}"
    msg.attach(part1)
    msg.attach(part2)

    # for i in range(len(customer_list)):  # property of theo lostoski
    #     stmp.sendmail(truegrit_user, customer_list[i], msg)

    stmp.sendmail(truegrit_user, customer_list[0], msg.as_string())
    print("END")
